# NOTE: Uncomment these for lines and comment out zplug lines to get oh-my-zsh back
# export ZSH=$HOME/.oh-my-zsh
# ZSH_THEME="mytheme"
# plugins=(git vi-mode history-substring-search)
# source $ZSH/oh-my-zsh.sh

# load zplug
export ZPLUG_HOME=$HOME/.zplug
source $ZPLUG_HOME/init.zsh

zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load

# END zplug

bindkey -v

# Make sure that the terminal is in application mode when zle is active, since
# only then values from $terminfo are valid
# From .oh-my-zsh/lib/key-bindings.zsh
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  function zle-line-init() {
    echoti smkx
  }
  function zle-line-finish() {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# enable vi mode
# ==============
export SPACESHIP_VI_MODE_INSERT=""
export SPACESHIP_VI_MODE_PREFIX=""
export SPACESHIP_VI_MODE_SUFFIX=""
export SPACESHIP_VI_MODE_NORMAL="[N] "
spaceship_vi_mode_enable
# map jk to enter normal mode in zsh
# https://dougblack.io/words/zsh-vi-mode.html
bindkey -M viins 'jk' vi-cmd-mode
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# User configuration
export DOTFILES=$HOME/.dotfiles

# load .zsh files
for config ($DOTFILES/zsh/**/*.zsh) source $config

# nix
source /Users/nick/.nix-profile/etc/profile.d/nix.sh
# editor
export EDITOR='nvim'

# nnn
export NNN_PLUG='f:fzcd;o:fzopen;z:fzfz'
export NNN_BMS='d:~/Downloads'

# PATH
# ====

# GOPATH
export GOPATH=$HOME/code
export PATH=$PATH:$GOPATH/bin
# add brew path to the start of PATH env var
export PATH=/usr/local/bin:$PATH
# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH
# add .local to PATH (haskell binaries go here)
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cabal/bin:$PATH
export PATH=$HOME/.ghcup/bin:$PATH
# doom bins
export PATH=$HOME/.emacs.d/bin:$PATH
# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
	export PATH=/usr/local/sbin:$PATH
fi
# setup up java stuff
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_191.jdk/Contents/Home
export PATH=/opt/apache-maven-3.5.0/bin:$PATH

# [ -z "$TMUX" ] && export TERM=xterm-256color
# for iTerm/tmux/vim use xterm-256color
# export TERM=alacritty

# http://apple.stackexchange.com/questions/75571/the-history-is-shared-between-my-iterm2-terminal-tabs-how-can-i-switch-that-off
# Disable cross tab history in iTerm/zsh
unsetopt inc_append_history
unsetopt share_history

# opam configuration
test -r /Users/nick/.opam/opam-init/init.zsh && . /Users/nick/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# fnm
eval "$(fnm env --multi)"

# Base16 shell
if [ -z "$THEME" ]; then
	export THEME="base16-solarized-dark"
fi
if [ -z "$BACKGROUND" ]; then
	export BACKGROUND="dark"
fi

# commented out while I'm trying 'true' solarized instead of base16 version
# BASE16_SHELL="$DOTFILES/.config/base16-shell/$THEME.$BACKGROUND.sh"
# source $BASE16_SHELL

# required to make z command work
if hash brew 2>/dev/null; then
	source `brew --prefix`/etc/profile.d/z.sh
fi

source ~/.config/up/up.sh

# load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_TMUX=1
# https://github.com/junegunn/fzf/issues/986
command -v blsd > /dev/null && export FZF_ALT_C_COMMAND='blsd'
# https://github.com/junegunn/fzf/wiki/examples#z
unalias z 2> /dev/null
z() {
	[ $# -gt 0 ] && _z "$*" && return
	# remove --inline-info fzf option so that number of results displays on newline
	cd "$(_z -l 2>&1 | fzf-tmux --height 40% --reverse +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}

# spaceship config
export SPACESHIP_PROMPT_ADD_NEWLINE=false
export SPACESHIP_DIR_TRUNC=0 # show full pwd
export SPACESHIP_DIR_TRUNC_REPO=false # don't truncate pwd in git repos
# export SPACESHIP_GIT_SYMBOL=$'\uf418 '
export SPACESHIP_GIT_BRANCH_PREFIX="" # NOTE: Empty until font is fixed
# disable unwanted sections
export SPACESHIP_HG_SHOW=false
export SPACESHIP_PACKAGE_SHOW=false
export SPACESHIP_NODE_SHOW=false
export SPACESHIP_RUBY_SHOW=false
export SPACESHIP_ELM_SHOW=false
export SPACESHIP_ELIXER_SHOW=false
export SPACESHIP_XCODE_SHOW_LOCAL=false
export SPACESHIP_XCODE_SHOW_GLOBAL=false
export SPACESHIP_SWIFT_SHOW_LOCAL=false
export SPACESHIP_GOLANG_SHOW=false
export SPACESHIP_PHP_SHOW=false
export SPACESHIP_RUST_SHOW=false
export SPACESHIP_HASKELL_SHOW=false
export SPACESHIP_JULIA_SHOW=false
export SPACESHIP_DOCKER_SHOW=false
export SPACESHIP_DOCKER_CONTEXT_SHOW=false
export SPACESHIP_AWS_SHOW=false
export SPACESHIP_VENV_SHOW=false
export SPACESHIP_CONDA_SHOW=false
export SPACESHIP_PYENV_SHOW=false
export SPACESHIP_DOTNET_SHOW=false
export SPACESHIP_EMBER_SHOW=false
export SPACESHIP_KUBECTL_VERSION_SHOW=false
export SPACESHIP_KUBECONTEXT_SHOW=false
export SPACESHIP_TERRAFORM_SHOW=false
export SPACESHIP_EXEC_TIME_SHOW=false
export SPACESHIP_BATTERY_SHOW=false
# https://github.com/denysdovhan/spaceship-prompt/blob/master/docs/Troubleshooting.md#why-is-my-prompt-slow
export SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  line_sep      # Line break
  vi_mode     # Vi-mode indicator (Disabled)
  jobs          # Background jobs indicator
  char          # Prompt character
)

# http://superuser.com/questions/565178/how-do-i-get-the-numpad-to-work-in-vim-using-iterm2-on-osx-with-term-xterm
# OR
# http://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[On" "."
bindkey -s "^[OM" "^M" # fix the enter key on the numpad
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ok" "+"
bindkey -s "^[Om" "-"
bindkey -s "^[Oj" "*"
bindkey -s "^[Oo" "/"
