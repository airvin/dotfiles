# load zplug
# export ZPLUG_HOME=/usr/local/opt/zplug
# source $ZPLUG_HOME/init.zsh

# # Install oh-my-zsh plugins
# zplug "plugins/git",   from:oh-my-zsh
# zplug "plugins/vi-mode",   from:oh-my-zsh
# zplug "plugins/history-substring-search",   from:oh-my-zsh
# zplug "plugins/zsh-nvm",   from:oh-my-zsh

# # Install plugins if there are plugins that have not been installed
# if ! zplug check --verbose; then
#     printf "Install? [y/N]: "
#     if read -q; then
#         echo; zplug install
#     fi
# fi

# # Then, source plugins and add commands to $PATH
# zplug load --verbose

# END zplug

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# ZSH_THEME="frisk"
ZSH_THEME="mytheme"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=20

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# https://github.com/robbyrussell/oh-my-zsh/issues/5327#issuecomment-248836398 seems zsh-nvm is slow af
# https://bennycwong.github.io/post/speeding-up-oh-my-zsh/
# plugins=(git zsh-nvm vi-mode history-substring-search)
plugins=(git vi-mode history-substring-search)

# fix for history searching with vi-mode https://github.com/robbyrussell/oh-my-zsh/issues/1479#issuecomment-42633554
# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down

# map jk to enter normal mode in zsh
# https://dougblack.io/words/zsh-vi-mode.html
bindkey -M viins 'jk' vi-cmd-mode
# User configuration
export DOTFILES=$HOME/.dotfiles

# load .zsh files
for config ($DOTFILES/zsh/**/*.zsh) source $config

source $ZSH/oh-my-zsh.sh
# nix
source /Users/nick/.nix-profile/etc/profile.d/nix.sh
# editor
export EDITOR='nvim'

# nnn
export NNN_PLUG='f:fzcd;o:fzopen;z:fzfz'
export NNN_BMS='d:~/Downloads'

# GOPATH
export GOPATH=$HOME/code
export PATH=$PATH:$GOPATH/bin

# add brew path to the start of PATH env var
export PATH=/usr/local/bin:$PATH

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# add .local to PATH (haskell binaries go here)
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cabal/bin:$PATH
export PATH=$HOME/.ghcup/bin:$PATH

# doom bins
export PATH=$HOME/.emacs.d/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
	export PATH=/usr/local/sbin:$PATH
fi

# hub integration with git command
# eval "$(hub alias -s)"

[ -z "$TMUX" ] && export TERM=xterm-256color

# http://apple.stackexchange.com/questions/75571/the-history-is-shared-between-my-iterm2-terminal-tabs-how-can-i-switch-that-off
# Disable cross tab history in iTerm/zsh
unsetopt inc_append_history
unsetopt share_history

# Base16 shell
if [ -z "$THEME" ]; then
	export THEME="base16-solarized-dark"
fi
if [ -z "$BACKGROUND" ]; then
	export BACKGROUND="dark"
fi

# required to make z command work
if hash brew 2>/dev/null; then
	source `brew --prefix`/etc/profile.d/z.sh
fi

source ~/.config/up/up.sh

# load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_TMUX=1
# https://github.com/junegunn/fzf/issues/986
command -v blsd > /dev/null && export FZF_ALT_C_COMMAND='blsd'
# https://github.com/junegunn/fzf/wiki/examples#z
unalias z 2> /dev/null
z() {
	[ $# -gt 0 ] && _z "$*" && return
	# remove --inline-info fzf option so that number of results displays on newline
	cd "$(_z -l 2>&1 | fzf-tmux --height 40% --reverse +s --tac --query "$*" | sed 's/^[0-9,.]* *//')"
}

# https://stackoverflow.com/questions/18241406/tmux-environment-variables-dont-show-up-in-session
# https://stackoverflow.com/questions/9901657/how-to-change-an-environment-variable-and-apply-to-all-windows-in-a-tmux-session
# TODO: for some reason, without the zsh-nvm plugin, this precmd hook fails to setup
# _update_background_var() {
#     local var
#     var=$(tmux show-environment |grep '^BACKGROUND=')
#     if [ "$?" -eq 0 ]; then
#         eval "$var"
#     fi
# }

# if [[ -n "$TMUX" ]]; then
#     add-zsh-hook precmd _update_background_var
# fi

# commented out while I'm trying 'true' solarized instead of base16 version
# BASE16_SHELL="$DOTFILES/.config/base16-shell/$THEME.$BACKGROUND.sh"
# source $BASE16_SHELL

# http://superuser.com/questions/414560/is-there-a-keyboard-shortcut-to-alternate-between-color-schemes-in-iterm2
# Change iterm2 profile. Usage it2prof ProfileName (case sensitive)
# NOTE: Does not work in tmux
it2prof() { echo -e "\033]50;SetProfile=$1\a" }

# http://superuser.com/questions/565178/how-do-i-get-the-numpad-to-work-in-vim-using-iterm2-on-osx-with-term-xterm
# OR
# http://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[On" "."
bindkey -s "^[OM" "^M" # fix the enter key on the numpad
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ok" "+"
bindkey -s "^[Om" "-"
bindkey -s "^[Oj" "*"
bindkey -s "^[Oo" "/"
